#!/usr/bin/env python3
"""
üö® –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–†–ò–¢–ò–ß–ï–°–ö–ò–• –û–®–ò–ë–û–ö OPENROUTER
–†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏, –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ–º –∏ —É—Å—Ç–∞—Ä–µ–≤—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
"""

import asyncio
import logging
from database.settings_db import get_setting, update_setting

logging.basicConfig(level=logging.INFO)

async def fix_critical_openrouter_issues():
    """–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º OpenRouter"""
    print("üö® –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–†–ò–¢–ò–ß–ï–°–ö–ò–• –û–®–ò–ë–û–ö OPENROUTER")
    print("=" * 65)
    
    # 1. –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –µ—Å–ª–∏ –µ—â–µ –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω
    print("\nüõë –®–∞–≥ 1: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞...")
    await update_setting('auto_mode_status', 'off')
    await update_setting('auto_posting_enabled', '0')
    print("‚úÖ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –æ—Ç–∫–ª—é—á–µ–Ω")
    
    # 2. –£–¥–∞–ª—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print("\nüßπ –®–∞–≥ 2: –û—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
    old_provider = await get_setting('ai_provider', None)
    if old_provider:
        print(f"üóëÔ∏è –£–¥–∞–ª—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É ai_provider: {old_provider}")
        await update_setting('ai_provider', '')  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    
    # 3. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –º–æ–¥–µ–ª–∏ —á–µ—Ä–µ–∑ –ë–î
    print("\nüîß –®–∞–≥ 3: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π...")
    await update_setting('openrouter_post_model', 'deepseek/deepseek-r1:free')
    await update_setting('openrouter_image_prompt_model', 'deepseek/deepseek-r1:free')
    print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –º–æ–¥–µ–ª–∏ deepseek/deepseek-r1:free")
    
    # 4. –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ—Å—Ç–∏–Ω–≥–∞
    print("\n‚è∞ –®–∞–≥ 4: –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –ø–æ—Å—Ç–∏–Ω–≥–∞...")
    current_interval = await get_setting('post_interval_minutes', '3')
    if int(current_interval) < 60:  # –ï—Å–ª–∏ –º–µ–Ω–µ–µ —á–∞—Å–∞
        await update_setting('post_interval_minutes', '60')  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 1 —á–∞—Å
        print(f"‚úÖ –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ—Å—Ç–∏–Ω–≥–∞ –∏–∑–º–µ–Ω–µ–Ω —Å {current_interval} –º–∏–Ω –Ω–∞ 60 –º–∏–Ω")
    else:
        print(f"‚úÖ –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ—Å—Ç–∏–Ω–≥–∞ —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π: {current_interval} –º–∏–Ω")
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    print("\nüìä –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
    
    status = {
        'auto_mode_status': await get_setting('auto_mode_status', 'unknown'),
        'auto_posting_enabled': await get_setting('auto_posting_enabled', 'unknown'),
        'openrouter_post_model': await get_setting('openrouter_post_model', 'unknown'),
        'openrouter_image_prompt_model': await get_setting('openrouter_image_prompt_model', 'unknown'),
        'post_interval_minutes': await get_setting('post_interval_minutes', 'unknown'),
        'ai_provider': await get_setting('ai_provider', 'unknown')
    }
    
    print("üìã –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:")
    for key, value in status.items():
        status_emoji = "‚úÖ" if value not in ['unknown', 'perplexity'] else "‚ö†Ô∏è"
        print(f"{status_emoji} {key}: {value}")
    
    # 6. –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
    print("1. üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:")
    print("   ‚Ä¢ Docker: docker-compose restart")
    print("   ‚Ä¢ Python: Ctrl+C –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –∑–∞–Ω–æ–≤–æ")
    print("2. üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—à–∏–±–æ–∫ OpenAI")
    print("3. ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ enable_autopost_after_restart.py –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞")
    print("4. üîç –ú–æ–¥–µ–ª—å deepseek/deepseek-r1:free —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π")
    
    return status

if __name__ == "__main__":
    asyncio.run(fix_critical_openrouter_issues()) 