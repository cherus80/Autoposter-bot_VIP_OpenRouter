#!/usr/bin/env python3
"""
üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ê–í–¢–û–ü–û–°–¢–ò–ù–ì–ê
–†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ OpenAI
"""

import asyncio
import logging
import os
from database.settings_db import update_setting, get_setting

logging.basicConfig(level=logging.INFO)

async def emergency_fix():
    """–≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞"""
    print("üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ê–í–¢–û–ü–û–°–¢–ò–ù–ì–ê")
    print("=" * 50)
    print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞: OpenAI –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –≤–∞—à–µ–º —Ä–µ–≥–∏–æ–Ω–µ")
    print("üîß –†–µ—à–µ–Ω–∏–µ: –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –º–æ–¥–µ–ª—å –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π")
    print()
    
    try:
        # 1. –°–†–û–ß–ù–û –æ—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏—è
        print("üõë –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏—è...")
        await update_setting('auto_mode_status', 'off')
        await update_setting('auto_posting_enabled', '0')
        print("‚úÖ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –æ—Ç–∫–ª—é—á–µ–Ω")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –º–æ–¥–µ–ª–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")
        current_post_model = os.getenv("OPENROUTER_POST_MODEL", "–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û")
        current_image_model = os.getenv("OPENROUTER_IMAGE_PROMPT_MODEL", "–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û")
        
        print(f"‚Ä¢ –¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –ø–æ—Å—Ç–æ–≤: {current_post_model}")
        print(f"‚Ä¢ –¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {current_image_model}")
        
        # 3. –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –º–æ–¥–µ–ª–∏
        print("\nüîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –º–æ–¥–µ–ª–∏...")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –º–æ–¥–µ–ª–∏ –±–µ–∑ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
        safe_models = {
            "OPENROUTER_POST_MODEL": "deepseek/deepseek-r1:free",
            "OPENROUTER_IMAGE_PROMPT_MODEL": "deepseek/deepseek-r1:free"
        }
        
        for key, value in safe_models.items():
            os.environ[key] = value
            print(f"‚úÖ {key} = {value}")
        
        # 4. –°–æ–∑–¥–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        print("\nüìù –û–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª...")
        
        env_lines = []
        env_file_exists = os.path.exists('.env')
        
        if env_file_exists:
            with open('.env', 'r', encoding='utf-8') as f:
                env_lines = f.readlines()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–∏
        model_settings = {
            "OPENROUTER_POST_MODEL": "deepseek/deepseek-r1:free",
            "OPENROUTER_IMAGE_PROMPT_MODEL": "deepseek/deepseek-r1:free"
        }
        
        updated_lines = []
        updated_keys = set()
        
        for line in env_lines:
            line = line.strip()
            if '=' in line and not line.startswith('#'):
                key = line.split('=')[0].strip()
                if key in model_settings:
                    updated_lines.append(f"{key}={model_settings[key]}\n")
                    updated_keys.add(key)
                else:
                    updated_lines.append(line + '\n')
            else:
                updated_lines.append(line + '\n')
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ –±—ã–ª–æ
        for key, value in model_settings.items():
            if key not in updated_keys:
                updated_lines.append(f"{key}={value}\n")
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π .env
        with open('.env', 'w', encoding='utf-8') as f:
            f.writelines(updated_lines)
        
        print("‚úÖ .env —Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω")
        
        # 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É
        print("\nüîÑ –¢–†–ï–ë–£–ï–¢–°–Ø –ü–ï–†–ï–ó–ê–ü–£–°–ö –ë–û–¢–ê!")
        print("–í—ã–ø–æ–ª–Ω–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥:")
        print("‚Ä¢ Docker Compose: docker-compose restart")
        print("‚Ä¢ Docker: docker restart <container_name>")
        print("‚Ä¢ Python: –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ main.py")
        print()
        print("‚ö†Ô∏è –ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –º–æ–¥–µ–ª—å –∏–∑–º–µ–Ω–∏—Ç—Å—è –Ω–∞ deepseek/deepseek-r1:free")
        print("‚úÖ –≠—Ç–∞ –º–æ–¥–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π")
        
        # 6. –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
        restart_script = """#!/usr/bin/env python3
import asyncio
from database.settings_db import update_setting

async def enable_autopost():
    await update_setting('auto_mode_status', 'on')
    await update_setting('auto_posting_enabled', '1')
    print("‚úÖ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –≤–∫–ª—é—á–µ–Ω —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –º–æ–¥–µ–ª—å—é")

if __name__ == "__main__":
    asyncio.run(enable_autopost())
"""
        
        with open('enable_autopost_after_restart.py', 'w', encoding='utf-8') as f:
            f.write(restart_script)
        
        print("\nüìù –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç enable_autopost_after_restart.py")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ –µ–≥–æ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏: {e}")
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏: {e}", exc_info=True)
        return False

async def check_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("\nüìä –°–¢–ê–¢–£–° –ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    
    auto_mode = await get_setting("auto_mode_status", "off")
    auto_enabled = await get_setting("auto_posting_enabled", "0")
    
    print(f"‚Ä¢ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥: {auto_mode}")
    print(f"‚Ä¢ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω: {auto_enabled}")
    print(f"‚Ä¢ –ú–æ–¥–µ–ª—å –¥–ª—è –ø–æ—Å—Ç–æ–≤: {os.getenv('OPENROUTER_POST_MODEL', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û')}")
    print(f"‚Ä¢ –ú–æ–¥–µ–ª—å –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {os.getenv('OPENROUTER_IMAGE_PROMPT_MODEL', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û')}")

if __name__ == "__main__":
    asyncio.run(emergency_fix())
    asyncio.run(check_status()) 