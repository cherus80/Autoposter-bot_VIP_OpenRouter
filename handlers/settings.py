"""
@file: handlers/settings.py
@description: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º UX
@dependencies: managers/publishing_manager.py
@created: 2025-01-20
@updated: 2025-01-20 - –£–ª—É—á—à–µ–Ω–∏–µ UX –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
"""

import logging
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from managers.publishing_manager import get_publishing_settings, update_publishing_settings
from database.settings_db import get_setting, update_setting
from config import VK_ACCESS_TOKEN, VK_GROUP_ID, OPENROUTER_POST_MODEL, OPENROUTER_IMAGE_PROMPT_MODEL

logger = logging.getLogger(__name__)
router = Router()

# FSM –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
class TimezoneSettings(StatesGroup):
    waiting_for_timezone = State()

def build_settings_breadcrumbs():
    """Breadcrumbs –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
    return InlineKeyboardMarkup(
        inline_keyboard=[[
            InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu"),
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")
        ]]
    )

@router.callback_query(F.data == "menu:publishing_settings")
async def cb_menu_publishing_settings(cb: CallbackQuery):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º"""
    try:
        settings = await get_publishing_settings(user_id=cb.from_user.id)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
        current_timezone = await get_setting("user_timezone", "+3")
        
        # –ò–∫–æ–Ω–∫–∏ –∏ —Å—Ç–∞—Ç—É—Å—ã
        tg_icon = "‚úÖ" if settings.publish_to_tg else "‚ùå"
        vk_icon = "‚úÖ" if settings.publish_to_vk else "‚ùå"
        tg_status = "–í–∫–ª—é—á–µ–Ω" if settings.publish_to_tg else "–í—ã–∫–ª—é—á–µ–Ω"
        vk_status = "–í–∫–ª—é—á–µ–Ω" if settings.publish_to_vk else "–í—ã–∫–ª—é—á–µ–Ω"
        
        settings_text = f"üì§ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"
        settings_text += f"üéØ <b>–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞:</b>\n\n"
        settings_text += f"üì± <b>Telegram:</b> {tg_icon} <b>{tg_status}</b>\n"
        if settings.publish_to_tg:
            settings_text += f"   üí° <i>–ü–æ—Å—Ç—ã –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –≤ —Ç–µ–∫—É—â–∏–π —á–∞—Ç</i>\n\n"
        else:
            settings_text += f"   üí° <i>–ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Telegram –æ—Ç–∫–ª—é—á–µ–Ω–∞</i>\n\n"
            
        # –°—Ç–∞—Ç—É—Å VK —Ç–æ–∫–µ–Ω–æ–≤
        vk_token_status = "üîë –¢–æ–∫–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã" if all([VK_ACCESS_TOKEN, VK_GROUP_ID]) else "‚ùå –¢–æ–∫–µ–Ω—ã –ù–ï –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        
        settings_text += f"üîµ <b>VKontakte:</b> {vk_icon} <b>{vk_status}</b>\n"
        if settings.publish_to_vk:
            settings_text += f"   üí° <i>–ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ VK –≥—Ä—É–ø–ø—É –∞–∫—Ç–∏–≤–Ω–∞</i>\n"
            settings_text += f"   {vk_token_status}\n\n"
        else:
            settings_text += f"   üí° <i>–ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ VK –æ—Ç–∫–ª—é—á–µ–Ω–∞</i>\n"
            settings_text += f"   {vk_token_status}\n\n"
        
        settings_text += f"üïí <b>–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å:</b> UTC{current_timezone}\n"
        settings_text += f"   üí° <i>–í–ª–∏—è–µ—Ç –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ</i>\n\n"
        
        # AI –º–æ–¥–µ–ª–∏ OpenRouter - –±–µ—Ä–µ–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        post_model = OPENROUTER_POST_MODEL or "–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
        image_model = OPENROUTER_IMAGE_PROMPT_MODEL or "–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
        
        settings_text += f"ü§ñ <b>OpenRouter –º–æ–¥–µ–ª–∏:</b>\n"
        settings_text += f"   üìù <i>–ü–æ—Å—Ç—ã:</i> {post_model}\n"
        settings_text += f"   üé® <i>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:</i> {image_model}\n\n"
        
        # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
        if not settings.publish_to_tg and not settings.publish_to_vk:
            settings_text += f"‚ö†Ô∏è <b>–í–ù–ò–ú–ê–ù–ò–ï:</b> –í—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã!\n"
            settings_text += f"   <i>–í–∫–ª—é—á–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –¥–ª—è –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞.</i>\n\n"
        
        settings_text += f"üéØ <b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</b>"
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        kb = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üì± Telegram", 
                    callback_data="settings:toggle_telegram"
                ),
                InlineKeyboardButton(
                    text="üîµ VK", 
                    callback_data="settings:toggle_vk"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üïí –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å", 
                    callback_data="settings:timezone"
                )
            ],
            [
                InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")
            ]
        ])
        
        await cb.message.edit_text(settings_text, reply_markup=kb)
        await cb.answer()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")
        await cb.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫")

@router.callback_query(F.data == "settings:timezone")
async def cb_settings_timezone(cb: CallbackQuery, state: FSMContext):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞"""
    current_timezone = await get_setting("user_timezone", "+3")
    
    await state.set_state(TimezoneSettings.waiting_for_timezone)
    
    await cb.message.edit_text(
        f"üïí <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞</b>\n\n"
        f"üìä <b>–¢–µ–∫—É—â–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å:</b> UTC{current_timezone}\n\n"
        f"üåç <b>–ü—Ä–∏–º–µ—Ä—ã —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤:</b>\n"
        f"‚Ä¢ <code>+3</code> - –ú–æ—Å–∫–≤–∞ (MSK)\n"
        f"‚Ä¢ <code>+7</code> - –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫, –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫\n"
        f"‚Ä¢ <code>+5</code> - –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥ (YEKT)\n"
        f"‚Ä¢ <code>+2</code> - –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥\n"
        f"‚Ä¢ <code>+0</code> - –õ–æ–Ω–¥–æ–Ω (GMT)\n"
        f"‚Ä¢ <code>-5</code> - –ù—å—é-–ô–æ—Ä–∫ (EST)\n\n"
        f"üí° <b>–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å</b> –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        f"<code>+7</code> –∏–ª–∏ <code>-5</code> (—Å–æ –∑–Ω–∞–∫–æ–º + –∏–ª–∏ -)",
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[[
                InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="settings:cancel_timezone")
            ]]
        )
    )
    await cb.answer()

@router.message(TimezoneSettings.waiting_for_timezone)
async def process_timezone(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞"""
    try:
        timezone_text = message.text.strip()
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞
        if not timezone_text.startswith(('+', '-')) or len(timezone_text) < 2:
            await message.answer(
                "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!</b>\n\n"
                "–í–≤–µ–¥–∏—Ç–µ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ <code>+7</code> –∏–ª–∏ <code>-5</code>"
            )
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ—Å–ª–µ –∑–Ω–∞–∫–∞ –∏–¥—É—Ç —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
        timezone_value = timezone_text[1:]
        if not timezone_value.isdigit():
            await message.answer(
                "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!</b>\n\n"
                "–ü–æ—Å–ª–µ –∑–Ω–∞–∫–∞ + –∏–ª–∏ - –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã. –ù–∞–ø—Ä–∏–º–µ—Ä: <code>+7</code>"
            )
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω (–æ—Ç -12 –¥–æ +14)
        tz_int = int(timezone_value)
        if timezone_text.startswith('-'):
            tz_int = -tz_int
        
        if tz_int < -12 or tz_int > 14:
            await message.answer(
                "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å!</b>\n\n"
                "–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç <code>-12</code> –¥–æ <code>+14</code>"
            )
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
        await update_setting("user_timezone", timezone_text)
        
        await state.clear()
        
        await message.answer(
            f"‚úÖ <b>–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!</b>\n\n"
            f"üïí <b>–ù–æ–≤—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å:</b> UTC{timezone_text}\n\n"
            f"üìä –í—Ä–µ–º—è –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è "
            f"—Å —É—á–µ—Ç–æ–º –≤–∞—à–µ–≥–æ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞.",
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[[
                    InlineKeyboardButton(text="üì§ –ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="menu:publishing_settings"),
                    InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")
                ]]
            )
        )
        
        logger.info(f"–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: UTC{timezone_text} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞")
        await state.clear()

@router.callback_query(F.data == "settings:cancel_timezone")
async def cb_cancel_timezone(cb: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞"""
    await state.clear()
    await cb.answer("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    await cb_menu_publishing_settings(cb)

@router.callback_query(F.data == "settings:toggle_telegram")
async def cb_toggle_telegram(cb: CallbackQuery):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram"""
    try:
        settings = await get_publishing_settings(user_id=cb.from_user.id)
        new_state = not settings.publish_to_tg
        
        await update_publishing_settings(
            user_id=cb.from_user.id,
            publish_to_tg=new_state,
            publish_to_vk=settings.publish_to_vk
        )
        
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
        status_text = "–≤–∫–ª—é—á–µ–Ω" if new_state else "–æ—Ç–∫–ª—é—á–µ–Ω"
        await cb.answer(f"‚úÖ Telegram {status_text}!")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
        await cb_menu_publishing_settings(cb)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ Telegram: {e}")
        await cb.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫")

@router.callback_query(F.data == "settings:toggle_vk")
async def cb_toggle_vk(cb: CallbackQuery):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ VK"""
    try:
        settings = await get_publishing_settings(user_id=cb.from_user.id)
        new_state = not settings.publish_to_vk
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ VK —Ç–æ–∫–µ–Ω–æ–≤ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏
        if new_state and not all([VK_ACCESS_TOKEN, VK_GROUP_ID]):
            await cb.answer(
                "‚ùå VK —Ç–æ–∫–µ–Ω—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!\n"
                "–£–∫–∞–∂–∏—Ç–µ VK_ACCESS_TOKEN –∏ VK_GROUP_ID –≤ .env —Ñ–∞–π–ª–µ",
                show_alert=True
            )
            return
        
        await update_publishing_settings(
            user_id=cb.from_user.id,
            publish_to_tg=settings.publish_to_tg,
            publish_to_vk=new_state
        )
        
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
        if new_state:
            if all([VK_ACCESS_TOKEN, VK_GROUP_ID]):
                await cb.answer("‚úÖ VKontakte –≤–∫–ª—é—á–µ–Ω! –ü–æ—Å—Ç—ã –±—É–¥—É—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å—Å—è –≤ VK.")
            else:
                await cb.answer("‚ö†Ô∏è VK –≤–∫–ª—é—á–µ–Ω, –Ω–æ —Ç–æ–∫–µ–Ω—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!", show_alert=True)
        else:
            await cb.answer("‚úÖ VKontakte –æ—Ç–∫–ª—é—á–µ–Ω!")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
        await cb_menu_publishing_settings(cb)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ VK: {e}")
        await cb.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫")



 