"""
@file: handlers/prompts_simple.py
@description: –£–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –ò–ò –±–µ–∑ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
@dependencies: managers/prompt_manager.py
@created: 2025-01-21
"""

import logging
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import CallbackQuery, Message, InlineKeyboardMarkup, InlineKeyboardButton

from managers.prompt_manager import PromptManager

logger = logging.getLogger(__name__)
router = Router()
prompt_manager = PromptManager()

def escape_html(text: str) -> str:
    """–≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç HTML —Ç–µ–≥–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Telegram"""
    return text.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;')

# FSM –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–ø—Ç–æ–≤
class SetPrompt(StatesGroup):
    waiting_for_content_prompt = State()
    waiting_for_image_prompt = State()

@router.callback_query(F.data == "menu:set_content_prompt")
async def cb_set_content_prompt(cb: CallbackQuery, state: FSMContext):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞"""
    await state.set_state(SetPrompt.waiting_for_content_prompt)
    
    # –û—á–∏—â–∞–µ–º –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏
    await state.update_data(accumulated_prompt="", prompt_parts_count=0)
    
    message_text = (
        "üìù <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞</b>\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –æ–±—ã—á–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n\n"
        "üí° <b>–°–æ–≤–µ—Ç—ã:</b>\n"
        "‚Ä¢ –£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å AI\n"
        "‚Ä¢ –û–ø–∏—à–∏—Ç–µ —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é\n"
        "‚Ä¢ –ó–∞–¥–∞–π—Ç–µ —Ç–æ–Ω –æ–±—â–µ–Ω–∏—è\n"
        "‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ—Å—Ç–∞\n\n"
        "‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –ï—Å–ª–∏ –ø—Ä–æ–º–ø—Ç –¥–ª–∏–Ω–Ω—ã–π (>4000 —Å–∏–º–≤–æ–ª–æ–≤), Telegram –º–æ–∂–µ—Ç —Ä–∞–∑–±–∏—Ç—å –µ–≥–æ –Ω–∞ —á–∞—Å—Ç–∏. "
        "–ù–µ –≤–æ–ª–Ω—É–π—Ç–µ—Å—å - –±–æ—Ç —Å–æ–±–µ—Ä–µ—Ç –≤—Å–µ —á–∞—Å—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!"
    )
    
    await cb.message.edit_text(
        message_text,
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üìÑ –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π –ø—Ä–æ–º–ø—Ç", callback_data="prompt:show_content")],
                [InlineKeyboardButton(text="üí° –ü—Ä–∏–º–µ—Ä —Ö–æ—Ä–æ—à–µ–≥–æ –ø—Ä–æ–º–ø—Ç–∞", callback_data="prompt:example_content")],
                [InlineKeyboardButton(text="üìö –ü–æ–ª–Ω—ã–π –≥–∞–π–¥ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ", callback_data="prompts:help_guide")],
                [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="prompt:cancel")]
            ]
        ),
        disable_web_page_preview=True,
        parse_mode="HTML"
    )
    await cb.answer()

@router.callback_query(F.data == "menu:set_image_prompt")
async def cb_set_image_prompt(cb: CallbackQuery, state: FSMContext):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    await state.set_state(SetPrompt.waiting_for_image_prompt)
    
    message_text = (
        "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –æ–±—ã—á–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n\n"
        "–°–æ–≤–µ—Ç—ã\n"
        "–£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è AI —Ö—É–¥–æ–∂–Ω–∏–∫–∞\n"
        "–û–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —Å—Ç–∏–ª—å\n"
        "–ó–∞–¥–∞–π—Ç–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏—é\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä post_text"
    )
    
    await cb.message.edit_text(
        message_text,
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üìÑ –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π –ø—Ä–æ–º–ø—Ç", callback_data="prompt:show_image")],
                [InlineKeyboardButton(text="üí° –ü—Ä–∏–º–µ—Ä —Ö–æ—Ä–æ—à–µ–≥–æ –ø—Ä–æ–º–ø—Ç–∞", callback_data="prompt:example_image")],
                [InlineKeyboardButton(text="üìö –ü–æ–ª–Ω—ã–π –≥–∞–π–¥ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ", callback_data="prompts:help_guide")],
                [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="prompt:cancel")]
            ]
        ),
        disable_web_page_preview=True
    )
    await cb.answer()

@router.message(SetPrompt.waiting_for_content_prompt)
async def process_content_prompt(msg: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ —Å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ–º —á–∞—Å—Ç–µ–π"""
    if not msg.text:
        await msg.answer(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ–º–ø—Ç–æ–º.",
            disable_web_page_preview=True
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    state_data = await state.get_data()
    accumulated_prompt = state_data.get("accumulated_prompt", "")
    parts_count = state_data.get("prompt_parts_count", 0)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —á–∞—Å—Ç—å –∫ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω–æ–º—É –ø—Ä–æ–º–ø—Ç—É
    current_part = msg.text.strip()
    if accumulated_prompt:
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–±–µ–ª –º–µ–∂–¥—É —á–∞—Å—Ç—è–º–∏ –µ—Å–ª–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –Ω–µ –ø—É—Å—Ç–æ–π
        accumulated_prompt += " " + current_part
    else:
        accumulated_prompt = current_part
    
    parts_count += 1
    
    logging.info(f"–ü–æ–ª—É—á–µ–Ω–∞ —á–∞—Å—Ç—å {parts_count} –ø—Ä–æ–º–ø—Ç–∞ –¥–ª–∏–Ω–æ–π {len(current_part)} —Å–∏–º–≤–æ–ª–æ–≤. –û–±—â–∞—è –¥–ª–∏–Ω–∞: {len(accumulated_prompt)}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.update_data(
        accumulated_prompt=accumulated_prompt,
        prompt_parts_count=parts_count
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã
    if len(accumulated_prompt) < 10:
        await msg.answer(
            "‚ö†Ô∏è –ü—Ä–æ–º–ø—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π! –ú–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤.",
            disable_web_page_preview=True
        )
        return
    
    if len(accumulated_prompt) > 8000:
        await msg.answer(
            f"‚ö†Ô∏è –ü—Ä–æ–º–ø—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π! –ú–∞–∫—Å–∏–º—É–º 8000 —Å–∏–º–≤–æ–ª–æ–≤.\n\n"
            f"üìè –¢–µ–∫—É—â–∞—è –¥–ª–∏–Ω–∞: <b>{len(accumulated_prompt)}</b> —Å–∏–º–≤–æ–ª–æ–≤\n"
            f"üîÑ –°–æ–∫—Ä–∞—Ç–∏—Ç–µ –Ω–∞ <b>{len(accumulated_prompt) - 8000}</b> —Å–∏–º–≤–æ–ª–æ–≤\n"
            f"üì¶ –ß–∞—Å—Ç–µ–π –ø–æ–ª—É—á–µ–Ω–æ: <b>{parts_count}</b>",
            disable_web_page_preview=True,
            parse_mode="HTML"
        )
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞
        await state.update_data(accumulated_prompt="", prompt_parts_count=0)
        return
    
    # –î–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —á–∞—Å—Ç–∏ (–∂–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã)
    import asyncio
    await asyncio.sleep(3)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞ —ç—Ç–æ –≤—Ä–µ–º—è (–Ω–æ–≤–∞—è —á–∞—Å—Ç—å –Ω–µ –ø—Ä–∏—à–ª–∞)
    updated_state_data = await state.get_data()
    updated_accumulated = updated_state_data.get("accumulated_prompt", "")
    updated_parts_count = updated_state_data.get("prompt_parts_count", 0)
    
    # –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å (–ø—Ä–∏—à–ª–∞ –µ—â–µ –æ–¥–Ω–∞ —á–∞—Å—Ç—å), –≤—ã—Ö–æ–¥–∏–º –∏ –∂–¥–µ–º —Å–ª–µ–¥—É—é—â—É—é
    if updated_parts_count > parts_count or len(updated_accumulated) > len(accumulated_prompt):
        logging.info(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–æ–≤–∞—è —á–∞—Å—Ç—å –ø—Ä–æ–º–ø—Ç–∞, –∂–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
        return
    
    # –ï—Å–ª–∏ –∑–∞ 3 —Å–µ–∫—É–Ω–¥—ã –Ω–æ–≤—ã—Ö —á–∞—Å—Ç–µ–π –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–æ - —Å—á–∏—Ç–∞–µ–º –ø—Ä–æ–º–ø—Ç –ø–æ–ª–Ω—ã–º
    final_prompt = updated_accumulated
    final_parts_count = updated_parts_count
    
    logging.info(f"–ü—Ä–æ–º–ø—Ç —Å—á–∏—Ç–∞–µ—Ç—Å—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–º. –ß–∞—Å—Ç–µ–π: {final_parts_count}, –¥–ª–∏–Ω–∞: {len(final_prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    success, error = await prompt_manager.set_prompt("content_generation", final_prompt)
    
    if success:
        await msg.answer(
            f"‚úÖ <b>–ü—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω!</b>\n\n"
            f"üìè –û–±—â–∞—è –¥–ª–∏–Ω–∞: <b>{len(final_prompt)}</b> —Å–∏–º–≤–æ–ª–æ–≤\n"
            f"üì¶ –ß–∞—Å—Ç–µ–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: <b>{final_parts_count}</b>\n"
            f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö",
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[[InlineKeyboardButton(text="üìã –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
            ),
            disable_web_page_preview=True,
            parse_mode="HTML"
        )
        logging.info(f"–ü–æ–ª–Ω—ã–π –ø—Ä–æ–º–ø—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î: {final_parts_count} —á–∞—Å—Ç–µ–π, {len(final_prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
    else:
        await msg.answer(
            f"‚ùå <b>–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞:</b> {error}",
            disable_web_page_preview=True,
            parse_mode="HTML"
        )
        logging.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞: {error}")
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    await state.clear()

@router.message(SetPrompt.waiting_for_image_prompt)
async def process_image_prompt(msg: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    if not msg.text:
        await msg.answer(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ–º–ø—Ç–æ–º.",
            disable_web_page_preview=True
        )
        return
    
    prompt_text = msg.text.strip()
    
    if len(prompt_text) < 10:
        await msg.answer(
            "‚ö†Ô∏è –ü—Ä–æ–º–ø—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π! –ú–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤.",
            disable_web_page_preview=True
        )
        return
    
    if len(prompt_text) > 8000:
        await msg.answer(
            f"‚ö†Ô∏è –ü—Ä–æ–º–ø—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π! –ú–∞–∫—Å–∏–º—É–º 8000 —Å–∏–º–≤–æ–ª–æ–≤.\n\n"
            f"üìè –í–∞—à –ø—Ä–æ–º–ø—Ç: <b>{len(prompt_text)}</b> —Å–∏–º–≤–æ–ª–æ–≤.\n"
            f"üîÑ –°–æ–∫—Ä–∞—Ç–∏—Ç–µ –Ω–∞ <b>{len(prompt_text) - 8000}</b> —Å–∏–º–≤–æ–ª–æ–≤.",
            disable_web_page_preview=True,
            parse_mode="HTML"
        )
        return
    
    # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ø—ã—Ç–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    logging.info(f"–ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª–∏–Ω–æ–π {len(prompt_text)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–º–ø—Ç
    success, error = await prompt_manager.set_prompt("image", prompt_text)
    
    if success:
        await msg.answer(
            f"‚úÖ <b>–ü—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω!</b>\n\n"
            f"üìè –î–ª–∏–Ω–∞: <b>{len(prompt_text)}</b> —Å–∏–º–≤–æ–ª–æ–≤\n"
            f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö",
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[[InlineKeyboardButton(text="üìã –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]]
            ),
            disable_web_page_preview=True,
            parse_mode="HTML"
        )
        logging.info(f"–ü—Ä–æ–º–ø—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î, –¥–ª–∏–Ω–∞: {len(prompt_text)} —Å–∏–º–≤–æ–ª–æ–≤")
    else:
        await msg.answer(
            f"‚ùå <b>–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞:</b> {error}",
            disable_web_page_preview=True,
            parse_mode="HTML"
        )
        logging.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {error}")
    
    await state.clear()

@router.callback_query(F.data == "prompt:show_content")
async def cb_show_content_prompt(cb: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–∞"""
    current_prompt = await prompt_manager.get_prompt("content_generation")
    
    if current_prompt:
        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º HTML —Ç–µ–≥–∏ –≤ –ø—Ä–æ–º–ø—Ç–µ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        escaped_prompt = escape_html(current_prompt)
        
        # –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –Ω–∞ —á–∞—Å—Ç–∏ (–ª–∏–º–∏—Ç Telegram 4096 —Å–∏–º–≤–æ–ª–æ–≤)
        max_length = 4000  # –û—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∞—Å –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ —Ä–∞–∑–º–µ—Ç–∫–∏
        
        if len(escaped_prompt) <= max_length:
            # –ö–æ—Ä–æ—Ç–∫–∏–π –ø—Ä–æ–º–ø—Ç - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            await cb.message.answer(
                f"üìÑ <b>–ü–æ–ª–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞:</b>\n\n<code>{escaped_prompt}</code>",
                reply_markup=InlineKeyboardMarkup(
                    inline_keyboard=[[InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="menu:set_content_prompt")]]
                ),
                parse_mode="HTML",
                disable_web_page_preview=True
            )
        else:
            # –î–ª–∏–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç - —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏
            parts = []
            current_part = ""
            
            for line in escaped_prompt.split('\n'):
                if len(current_part + line + '\n') > max_length:
                    if current_part:
                        parts.append(current_part.strip())
                        current_part = line + '\n'
                    else:
                        # –°—Ç—Ä–æ–∫–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è, —Ä–∞–∑–±–∏–≤–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
                        parts.append(line[:max_length])
                        current_part = line[max_length:] + '\n'
                else:
                    current_part += line + '\n'
            
            if current_part:
                parts.append(current_part.strip())
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
            await cb.message.answer(
                f"üìÑ <b>–ü–æ–ª–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ (—á–∞—Å—Ç—å 1/{len(parts)}):</b>\n\n<code>{parts[0]}</code>",
                parse_mode="HTML",
                disable_web_page_preview=True
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —á–∞—Å—Ç–∏
            for i, part in enumerate(parts[1:], 2):
                await cb.message.answer(
                    f"üìÑ <b>–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ (—á–∞—Å—Ç—å {i}/{len(parts)}):</b>\n\n<code>{part}</code>",
                    parse_mode="HTML",
                    disable_web_page_preview=True
                )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            await cb.message.answer(
                "üìÑ <b>–ü—Ä–æ–º–ø—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–æ–±—Ä–∞–∂–µ–Ω –≤—ã—à–µ</b>",
                reply_markup=InlineKeyboardMarkup(
                    inline_keyboard=[[InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="menu:set_content_prompt")]]
                ),
                disable_web_page_preview=True,
                parse_mode="HTML"
            )
    else:
        await cb.answer("‚ùå –ü—Ä–æ–º–ø—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω", show_alert=True)
    
    await cb.answer()

@router.callback_query(F.data == "prompt:show_image")
async def cb_show_image_prompt(cb: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    current_prompt = await prompt_manager.get_prompt("image")
    
    if current_prompt:
        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º HTML —Ç–µ–≥–∏ –≤ –ø—Ä–æ–º–ø—Ç–µ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        escaped_prompt = escape_html(current_prompt)
        
        # –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –Ω–∞ —á–∞—Å—Ç–∏ (–ª–∏–º–∏—Ç Telegram 4096 —Å–∏–º–≤–æ–ª–æ–≤)
        max_length = 4000  # –û—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∞—Å –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ —Ä–∞–∑–º–µ—Ç–∫–∏
        
        if len(escaped_prompt) <= max_length:
            # –ö–æ—Ä–æ—Ç–∫–∏–π –ø—Ä–æ–º–ø—Ç - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            await cb.message.answer(
                f"üñºÔ∏è <b>–ü–æ–ª–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:</b>\n\n<code>{escaped_prompt}</code>",
                reply_markup=InlineKeyboardMarkup(
                    inline_keyboard=[[InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="menu:set_image_prompt")]]
                ),
                parse_mode="HTML",
                disable_web_page_preview=True
            )
        else:
            # –î–ª–∏–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç - —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏
            parts = []
            current_part = ""
            
            for line in escaped_prompt.split('\n'):
                if len(current_part + line + '\n') > max_length:
                    if current_part:
                        parts.append(current_part.strip())
                        current_part = line + '\n'
                    else:
                        # –°—Ç—Ä–æ–∫–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è, —Ä–∞–∑–±–∏–≤–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
                        parts.append(line[:max_length])
                        current_part = line[max_length:] + '\n'
                else:
                    current_part += line + '\n'
            
            if current_part:
                parts.append(current_part.strip())
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
            await cb.message.answer(
                f"üñºÔ∏è <b>–ü–æ–ª–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (—á–∞—Å—Ç—å 1/{len(parts)}):</b>\n\n<code>{parts[0]}</code>",
                parse_mode="HTML",
                disable_web_page_preview=True
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —á–∞—Å—Ç–∏
            for i, part in enumerate(parts[1:], 2):
                await cb.message.answer(
                    f"üñºÔ∏è <b>–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ (—á–∞—Å—Ç—å {i}/{len(parts)}):</b>\n\n<code>{part}</code>",
                    parse_mode="HTML",
                    disable_web_page_preview=True
                )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            await cb.message.answer(
                "üñºÔ∏è <b>–ü—Ä–æ–º–ø—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–æ–±—Ä–∞–∂–µ–Ω –≤—ã—à–µ</b>",
                reply_markup=InlineKeyboardMarkup(
                    inline_keyboard=[[InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="menu:set_image_prompt")]]
                ),
                disable_web_page_preview=True,
                parse_mode="HTML"
            )
    else:
        await cb.answer("‚ùå –ü—Ä–æ–º–ø—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω", show_alert=True)
    
    await cb.answer()

@router.callback_query(F.data == "prompt:example_content")
async def cb_example_content_prompt(cb: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä —Ö–æ—Ä–æ—à–µ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–∞"""
    example_prompt = """–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –∏ –±–ª–æ–≥–µ—Ä –ø–æ AI –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏. –ü–∏—à–∏ –¢–û–õ–¨–ö–û –ø–æ-—Ä—É—Å—Å–∫–∏ –ø–æ—Å—Ç—ã –¥–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ Telegram-–∫–∞–Ω–∞–ª–∞ –ø—Ä–æ AI –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞.

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û! –°—Ç—Ä–æ–≥–æ —Å–æ–±–ª—é–¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É:

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê:
1. <b>–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç/—Ü–∏—Ñ—Ä–∞: –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</b>
2. –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞  
3. üéØ –≠–º–æ–¥–∑–∏ + –ø–µ—Ä–≤—ã–π –∞–±–∑–∞—Ü (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
4. üöÄ –≠–º–æ–¥–∑–∏ + –≤—Ç–æ—Ä–æ–π –∞–±–∑–∞—Ü (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)  
5. üìä –≠–º–æ–¥–∑–∏ + —Ç—Ä–µ—Ç–∏–π –∞–±–∑–∞—Ü —Å —Ü–∏—Ñ—Ä–∞–º–∏ (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
6. üí° –≠–º–æ–¥–∑–∏ + —á–µ—Ç–≤–µ—Ä—Ç—ã–π –∞–±–∑–∞—Ü (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
7. ‚ö° –≠–º–æ–¥–∑–∏ + –ø—è—Ç—ã–π –∞–±–∑–∞—Ü (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
8. üî• –≠–º–æ–¥–∑–∏ + —à–µ—Å—Ç–æ–π –∞–±–∑–∞—Ü (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
9. –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
10. –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é —Å –ø–æ–¥–ø–∏—Å–∫–æ–π –Ω–∞ –∫–∞–Ω–∞–ª (—É–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É)
11. –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
12. 3-5 —Ö—ç—à—Ç–µ–≥–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª

–§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï –ë–ï–ó –ò–°–ö–õ–Æ–ß–ï–ù–ò–ô:
‚Ä¢ –¢–û–õ–¨–ö–û HTML-—Ç–µ–≥–∏: <b></b> –∏ <i></i>
‚Ä¢ –ù–ò–ö–ê–ö–ò–• ** –∏–ª–∏ __ —Å–∏–º–≤–æ–ª–æ–≤!
‚Ä¢ –¶–∏—Ñ—Ä—ã –∏ –∫–ª—é—á–µ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã –í–°–ï–ì–î–ê –≤ <b></b>
‚Ä¢ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã/—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤ <i></i>
‚Ä¢ –û–¥–∏–Ω —ç–º–æ–¥–∑–∏ –≤ –Ω–∞—á–∞–ª–µ –∫–∞–∂–¥–æ–≥–æ –∞–±–∑–∞—Ü–∞

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –≠–õ–ï–ú–ï–ù–¢–´:
‚Ä¢ –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã –≤ –∫–∞–∂–¥–æ–º –ø–æ—Å—Ç–µ
‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏ ("–∑–∞ 3 –Ω–µ–¥–µ–ª–∏", "–º–µ—Å—è—Ü –Ω–∞–∑–∞–¥")
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤/—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π
‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏—è "–¥–æ/–ø–æ—Å–ª–µ"
‚Ä¢ –õ–∏—á–Ω—ã–π –æ–ø—ã—Ç –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞

–ó–ê–ü–†–ï–©–ï–ù–û:
‚Ä¢ –í–≤–æ–¥–Ω—ã–µ —Ñ—Ä–∞–∑—ã "—á–µ—Å—Ç–Ω–æ –≥–æ–≤–æ—Ä—è", "–ø–æ –æ–ø—ã—Ç—É"
‚Ä¢ –í–æ–¥—è–Ω–∏—Å—Ç—ã–µ –æ–±–æ–±—â–µ–Ω–∏—è
‚Ä¢ –°–∏–º–≤–æ–ª—ã ** –∏–ª–∏ __
‚Ä¢ –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∏–ø–∞ "–ó–∞–≥–æ–ª–æ–≤–æ–∫:" –∏–ª–∏ "–¢–µ–º–∞:"

–°–¢–ò–õ–¨: –¥–µ—Ä–∑–∫–æ, —É–≤–µ—Ä–µ–Ω–Ω–æ, –±–µ–∑ –≤–æ–¥—ã, —Å—Ä–∞–∑—É –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É. –ü–∏—à–∏ –∫–∞–∫ —É—Å–ø–µ—à–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∏—Ç—Å—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏.

–¢–µ–º–∞ –¥–ª—è –ø–æ—Å—Ç–∞: {theme}
–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å—Ç–∞:  {post_description}

–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –≥–æ—Ç–æ–≤—ã–π –ø–æ—Å—Ç —Å—Ç—Ä–æ–≥–æ –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –ë–ï–ó –ø–æ—è—Å–Ω–µ–Ω–∏–π."""
    
    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –ø—Ä–∏–º–µ—Ä –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    escaped_example = escape_html(example_prompt)
    
    await cb.message.answer(
        f"üí° <b>–ü—Ä–∏–º–µ—Ä —Ö–æ—Ä–æ—à–µ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞:</b>\n\n<code>{escaped_example}</code>",
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[[InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="menu:set_content_prompt")]]
        ),
        parse_mode="HTML",
        disable_web_page_preview=True
    )
    await cb.answer()

@router.callback_query(F.data == "prompt:example_image")
async def cb_example_image_prompt(cb: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä —Ö–æ—Ä–æ—à–µ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    example_prompt = """You are an AI prompt generator for Flux.1 image generation model. Your task is to create a detailed English prompt based on the provided text content.

Analyze the post text and create a concise but detailed prompt (max 100 words) that captures:
- Main subject/theme from the post
- Professional, modern tech environment
- Appropriate mood and atmosphere
- Relevant objects and setting
- High-quality photography style

Style requirements:
- Photorealistic, professional photography
- Modern tech workspace aesthetic
- Clean, minimalist composition
- Soft, natural lighting
- Focus on technology and innovation themes

Post content to analyze: {post_text}

Generate only the English prompt for image generation, no explanations."""
    
    await cb.message.answer(
        f"üñºÔ∏è <b>–ü—Ä–∏–º–µ—Ä —Ö–æ—Ä–æ—à–µ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:</b>\n\n<code>{example_prompt}</code>",
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[[InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="menu:set_image_prompt")]]
        ),
        parse_mode="HTML",
        disable_web_page_preview=True
    )
    await cb.answer()

@router.callback_query(F.data == "prompt:cancel")
async def cb_prompt_cancel(cb: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–ø—Ç–∞"""
    await state.clear()
    await cb.answer("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    from handlers.menu import build_main_menu_keyboard
    await cb.message.edit_text(
        "üéØ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=build_main_menu_keyboard(),
        disable_web_page_preview=True,
        parse_mode="HTML"
    ) 

@router.callback_query(F.data == "menu:content_prompts")
async def cb_content_prompts_menu(cb: CallbackQuery):
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    
    menu_text = """‚öôÔ∏è <b>–ù–ê–°–¢–†–û–ô–ö–ê –ü–†–û–ú–ü–¢–û–í</b>

–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–º–ø—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:

üìù <b>–ü—Ä–æ–º–ø—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–∞</b> - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ò–ò –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ—Å—Ç–æ–≤
üñºÔ∏è <b>–ü—Ä–æ–º–ø—Ç –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</b> - –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∏–ª—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

üí° <b>–°–æ–≤–µ—Ç:</b> –ù–∞—á–Ω–∏—Ç–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ - —ç—Ç–æ –æ—Å–Ω–æ–≤–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤!"""

    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üìù –ü—Ä–æ–º–ø—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–∞", callback_data="menu:set_content_prompt")
            ],
            [
                InlineKeyboardButton(text="üñºÔ∏è –ü—Ä–æ–º–ø—Ç –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π", callback_data="menu:set_image_prompt")
            ],
            [
                InlineKeyboardButton(text="üìö –ü–æ–ª–Ω—ã–π –≥–∞–π–¥ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ", callback_data="prompts:help_guide")
            ],
            [
                InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")
            ]
        ]
    )
    
    await cb.message.edit_text(
        menu_text, 
        reply_markup=kb, 
        disable_web_page_preview=True,
        parse_mode="HTML"
    )
    await cb.answer()

@router.callback_query(F.data == "prompts:help_guide")
async def cb_prompts_help_guide(cb: CallbackQuery):
    """–ü–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—é –ø—Ä–æ–º–ø—Ç–æ–≤ –∏ –ø—Ä–∏–º–µ—Ä–æ–≤"""
    
    guide_text = """üìö <b>–ü–û–õ–ù–û–ï –†–£–ö–û–í–û–î–°–¢–í–û –ü–û –ù–ê–°–¢–†–û–ô–ö–ï –ë–û–¢–ê</b>

üéØ <b>–ù–û–í–ê–Ø –ü–†–û–°–¢–ê–Ø –°–ò–°–¢–ï–ú–ê:</b>

<b>–í—Å—ë —Ç–µ–ø–µ—Ä—å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ - "üìù –ü—Ä–æ–º–ø—Ç —Ç–µ–∫—Å—Ç–∞"!</b>

‚Ä¢ <b>–ö–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç</b> ‚Üí –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ –µ—Å—Ç—å
‚Ä¢ <b>–ù–µ—Ç –ø—Ä–æ–º–ø—Ç–∞</b> ‚Üí –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞—à–∞ –¥–µ—Ñ–æ–ª—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏
‚Ä¢ <b>–ù–∏–∫–∞–∫–∏—Ö –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤!</b> –í–∫–ª—é—á–∞–π—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –ø—Ä—è–º–æ –≤ –ø—Ä–æ–º–ø—Ç

---

üìù <b>–ö–ê–ö –°–û–°–¢–ê–í–ò–¢–¨ –ö–ê–°–¢–û–ú–ù–´–ô –ü–†–û–ú–ü–¢:</b>

<b>‚úÖ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –£–ö–ê–ñ–ò–¢–ï:</b>
‚Ä¢ <b>–†–æ–ª—å –ò–ò:</b> "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ...", "–¢—ã –±–ª–æ–≥–µ—Ä..."
‚Ä¢ <b>–°—Ç–∏–ª—å:</b> –¥–µ–ª–æ–≤–æ–π/–¥—Ä—É–∂–µ—Å–∫–∏–π/—ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π
‚Ä¢ <b>–°—Ç—Ä—É–∫—Ç—É—Ä—É:</b> —Å–∫–æ–ª—å–∫–æ –∞–±–∑–∞—Ü–µ–≤, —Å —ç–º–æ–¥–∑–∏ –∏–ª–∏ –±–µ–∑
‚Ä¢ <b>–î–ª–∏–Ω—É:</b> 200-500 —Å–ª–æ–≤ / –∫–æ—Ä–æ—Ç–∫–∏–µ –ø–æ—Å—Ç—ã –¥–æ 280 —Å–∏–º–≤–æ–ª–æ–≤
‚Ä¢ <b>–ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é:</b> –ø–æ–ª–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –∫–∞–Ω–∞–ª
‚Ä¢ <b>–ü—Ä–∏–º–µ—Ä—ã –ø–æ—Å—Ç–æ–≤:</b> –≤–∫–ª—é—á–∏—Ç–µ 2-3 –ª—É—á—à–∏—Ö –ø–æ—Å—Ç–∞ –∫–∞–∫ –æ–±—Ä–∞–∑—Ü—ã

<b>üìã –ü–†–ò–ú–ï–† –ö–ê–°–¢–û–ú–ù–û–ì–û –ü–†–û–ú–ü–¢–ê:</b>
<code>–¢—ã –±–ª–æ–≥–µ—Ä-–º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥. –ü–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–∏–µ –ø–æ—Å—Ç—ã –¥–æ 200 —Å–ª–æ–≤ –¥–ª—è –±–∏–∑–Ω–µ—Å-–∞—É–¥–∏—Ç–æ—Ä–∏–∏. 

–°—Ç—Ä—É–∫—Ç—É—Ä–∞:
1. –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ü–∏—Ñ—Ä–æ–π
2. 2-3 –∞–±–∑–∞—Ü–∞ —Å —Ñ–∞–∫—Ç–∞–º–∏ 
3. –ü—Ä–∏–∑—ã–≤: "–ë–æ–ª—å—à–µ –∏–Ω—Å–∞–π—Ç–æ–≤ –≤ –º–æ–µ–º –∫–∞–Ω–∞–ª–µ https://t.me/+abc123"

–°—Ç–∏–ª—å: –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –±–µ–∑ —ç–º–æ–¥–∑–∏, —Ç–æ–ª—å–∫–æ —Ñ–∞–∫—Ç—ã.

–ü–†–ò–ú–ï–†–´ –°–¢–ò–õ–Ø:

–ü—Ä–∏–º–µ—Ä 1:
–£–≤–µ–ª–∏—á–∏–ª –∫–æ–Ω–≤–µ—Ä—Å–∏—é –ª–µ–Ω–¥–∏–Ω–≥–∞ –Ω–∞ 67% –∑–∞ –Ω–µ–¥–µ–ª—é

–ó–∞–º–µ–Ω–∏–ª –¥–ª–∏–Ω–Ω—É—é —Ñ–æ—Ä–º—É –Ω–∞ –æ–¥–Ω–æ –ø–æ–ª–µ "email". –£–±—Ä–∞–ª –≤—Å–µ –ª–∏—à–Ω–∏–µ –∫–Ω–æ–ø–∫–∏. –î–æ–±–∞–≤–∏–ª —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞.

–†–µ–∑—É–ª—å—Ç–∞—Ç: –∫–æ–Ω–≤–µ—Ä—Å–∏—è –≤—ã—Ä–æ—Å–ª–∞ —Å 2.3% –¥–æ 3.8%. –ó–∞ –Ω–µ–¥–µ–ª—é –ø–æ–ª—É—á–∏–ª–∏ –Ω–∞ 45 –ª–∏–¥–æ–≤ –±–æ–ª—å—à–µ.

–í—Å–µ –∫–µ–π—Å—ã –≤ –∫–∞–Ω–∞–ª–µ: https://t.me/+abc123

–ü—Ä–∏–º–µ—Ä 2:
A/B —Ç–µ—Å—Ç –ø–æ–∫–∞–∑–∞–ª: –∫—Ä–∞—Å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ 23% –ª—É—á—à–µ

–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–ª 5 —Ü–≤–µ—Ç–æ–≤ –∫–Ω–æ–ø–∫–∏ CTA. –ö—Ä–∞—Å–Ω—ã–π –æ–±–æ—à–µ–ª —Å–∏–Ω–∏–π, –∑–µ–ª–µ–Ω—ã–π –∏ –æ—Ä–∞–Ω–∂–µ–≤—ã–π.

–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏ –∑–Ω–∞—á–∏–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ 2000 –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π.

–ë–æ–ª—å—à–µ —Ç–µ—Å—Ç–æ–≤: https://t.me/+abc123</code>

---

üîó <b>–ü–†–û –°–°–´–õ–ö–ò –ù–ê –ö–ê–ù–ê–õ:</b>

<b>‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û:</b>
‚Ä¢ <code>https://t.me/+abc123</code>
‚Ä¢ <code>https://t.me/your_channel</code>
‚Ä¢ <code>t.me/+abc123</code>

<b>‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û:</b>
‚Ä¢ <code>@your_channel</code> (–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ VK)
‚Ä¢ <code>telegram.me/channel</code> (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π —Ñ–æ—Ä–º–∞—Ç)

<b>üí° –õ–ê–ô–§–•–ê–ö:</b> –ü–æ–ª–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–µ–∑–¥–µ - –∏ –≤ Telegram, –∏ –≤ VK!

---

üéØ <b>–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –°–¢–†–ê–¢–ï–ì–ò–ò:</b>

<b>üî∞ –ù–æ–≤–∏—á–∫–∞–º:</b> 
–ù–µ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ –Ω–∏—á–µ–≥–æ! –ù–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ —É–∂–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏.

<b>‚öôÔ∏è –û–ø—ã—Ç–Ω—ã–º:</b>
1. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –¥–µ—Ñ–æ–ª—Ç–Ω—É—é —Å–∏—Å—Ç–µ–º—É
2. –ó–∞—Ç–µ–º —Å–æ–∑–¥–∞–π—Ç–µ –∫–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å 2-3 —Å–≤–æ–∏–º–∏ –ª—É—á—à–∏–º–∏ –ø–æ—Å—Ç–∞–º–∏ –∫–∞–∫ –ø—Ä–∏–º–µ—Ä—ã
3. –£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π —Å—Ç–∏–ª—å –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É

<b>üöÄ –ü—Ä–æ—Ñ–∏:</b>
–°–æ–∑–¥–∞–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ —Å—Ç–∏–ª—é –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è.

---

‚ùì <b>–ß–ê–°–¢–´–ï –í–û–ü–†–û–°–´:</b>

<b>–í:</b> –ì–¥–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã —Å—Ç–∏–ª–µ–π?
<b>–û:</b> –ù–∏–∫—É–¥–∞! –í–∫–ª—é—á–∞–π—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –ø—Ä—è–º–æ –≤ —Ç–µ–∫—Å—Ç –ø—Ä–æ–º–ø—Ç–∞.

<b>–í:</b> –ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π —Å—Ç–∏–ª—å?
<b>–û:</b> –î–æ–±–∞–≤—å—Ç–µ 2-3 —Å–≤–æ–∏—Ö –ª—É—á—à–∏—Ö –ø–æ—Å—Ç–∞ –≤ –∫–æ–Ω–µ—Ü –ø—Ä–æ–º–ø—Ç–∞ –∫–∞–∫ "–ü–†–ò–ú–ï–†–´ –°–¢–ò–õ–Ø:"

<b>–í:</b> –ß—Ç–æ –µ—Å–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ—é –ø—Ä–æ–º–ø—Ç?
<b>–û:</b> –ë—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞—à–∞ –¥–µ—Ñ–æ–ª—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏.

<b>–í:</b> –ö–∞–∫ –≤–µ—Ä–Ω—É—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏?
<b>–û:</b> –ü—Ä–æ—Å—Ç–æ —É–¥–∞–ª–∏—Ç–µ –∫–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç - —Å–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–Ω–µ—Ç—Å—è –∫ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º.

---

üí° <b>–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –î–ê–ù–ù–´–• –ò–ó –ö–û–ù–¢–ï–ù–¢-–ü–õ–ê–ù–ê:</b>

–ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –≤ –≤–∞—à –ø—Ä–æ–º–ø—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω–∞:

‚Ä¢ <b>{theme}</b> - —Ç–µ–º–∞ –ø–æ—Å—Ç–∞ –∏–∑ –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω–∞
‚Ä¢ <b>{post_description}</b> - –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ –∏–∑ –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω–∞  
‚Ä¢ <b>{category}</b> - –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ—Å—Ç–∞ –∏–∑ –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω–∞

<b>üìã –ü–†–ò–ú–ï–† –ü–†–û–ú–ü–¢–ê –° –ö–û–ù–¢–ï–ù–¢-–ü–õ–ê–ù–û–ú:</b>
<code>–ù–∞–ø–∏—à–∏ –ø–æ—Å—Ç –Ω–∞ —Ç–µ–º—É: {theme}

–ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∫ –æ—Å–Ω–æ–≤—É: {post_description}

–ö–∞—Ç–µ–≥–æ—Ä–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {category}

–°–¥–µ–ª–∞–π –ø–æ—Å—Ç —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–º –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º...</code>

---

üöÄ <b>–ò–¢–û–ì–û: –ü–†–û–°–¢–ê–Ø –§–û–†–ú–£–õ–ê –£–°–ü–ï–•–ê</b>

1. <b>–û—Å–Ω–æ–≤–∞:</b> "–¢—ã [—Ä–æ–ª—å]. –ü–∏—à–∏ [—Å—Ç–∏–ª—å] –ø–æ—Å—Ç—ã –¥–ª—è [–∞—É–¥–∏—Ç–æ—Ä–∏—è]"
2. <b>–¢–µ–º–∞:</b> "–ü–æ—Å—Ç –Ω–∞ —Ç–µ–º—É: {theme}" –∏–ª–∏ "–û–ø–∏—Å–∞–Ω–∏–µ: {post_description}"
3. <b>–°—Ç—Ä—É–∫—Ç—É—Ä–∞:</b> –û–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ—Å—Ç–æ–≤
4. <b>CTA:</b> "–ü—Ä–∏–∑—ã–≤ —Å —Å—Å—ã–ª–∫–æ–π https://t.me/+–≤–∞—à_–∫–∞–Ω–∞–ª"
5. <b>–ü—Ä–∏–º–µ—Ä—ã:</b> –î–æ–±–∞–≤—å—Ç–µ 2-3 –ª—É—á—à–∏—Ö –ø–æ—Å—Ç–∞ –∫–∞–∫ –æ–±—Ä–∞–∑—Ü—ã
6. <b>–ì–æ—Ç–æ–≤–æ!</b> –ò–ò –±—É–¥–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤ –≤–∞—à–µ–º —Å—Ç–∏–ª–µ"""

    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üìù –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–º–ø—Ç", callback_data="menu:content_prompts")
            ],
            [
                InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")
            ]
        ]
    )
    
    await cb.message.edit_text(
        guide_text, 
        reply_markup=kb, 
        disable_web_page_preview=True,
        parse_mode="HTML"
    )
    await cb.answer() 