#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–æ–º
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∞–µ—Ç –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥
"""

import asyncio
import logging
from database.settings_db import update_setting, get_setting
from managers.publishing_manager import PublishingManager
from config import ADMIN_ID

logging.basicConfig(level=logging.INFO)

async def fix_autoposting():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–æ–º"""
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ê–í–¢–û–ü–û–°–¢–ò–ù–ì–ê")
    print("=" * 50)
    
    try:
        # 1. –í–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥
        print("\nüöÄ –í–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥...")
        await update_setting('auto_mode_status', 'on')
        await update_setting('auto_posting_enabled', '1')
        print("‚úÖ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –≤–∫–ª—é—á–µ–Ω")
        
        # 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        print("\n‚è∞ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—É–±–ª–∏–∫–∞—Ü–∏–∏...")
        current_interval = await get_setting('post_interval_minutes', '240')
        print(f"  –¢–µ–∫—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: {current_interval} –º–∏–Ω—É—Ç")
        
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
        response = input("  –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª 5 –º–∏–Ω—É—Ç? (y/n): ").lower()
        if response in ['y', 'yes', '–¥–∞']:
            await update_setting('post_interval_minutes', '5')
            await update_setting('posting_interval_hours', '1')  # –æ–±–Ω–æ–≤–ª—è–µ–º –∏ —á–∞—Å—ã –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: 5 –º–∏–Ω—É—Ç")
        else:
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑—É–º–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            await update_setting('post_interval_minutes', '30')
            await update_setting('posting_interval_hours', '1')
            print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–Ω—Ç–µ—Ä–≤–∞–ª: 30 –º–∏–Ω—É—Ç")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –≤–∫–ª—é—á–∞–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏—é –≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
        print("\nüì§ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏—é –≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã...")
        publishing_manager = PublishingManager()
        pub_settings = await publishing_manager.get_settings(user_id=int(ADMIN_ID))
        
        print(f"  Telegram: {'‚úÖ' if pub_settings.publish_to_tg else '‚ùå'}")
        print(f"  VK: {'‚úÖ' if pub_settings.publish_to_vk else '‚ùå'}")
        
        if not pub_settings.publish_to_tg:
            await publishing_manager.update_settings(
                user_id=int(ADMIN_ID),
                publish_to_tg=True
            )
            print("‚úÖ –í–∫–ª—é—á–µ–Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Telegram")
        
        # VK –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å, —Ç–∞–∫ –∫–∞–∫ –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        print("\nüñºÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
        with_image = await get_setting('autofeed_with_image', 'off')
        if with_image == 'off':
            await update_setting('autofeed_with_image', 'on')
            print("‚úÖ –í–∫–ª—é—á–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–ø–æ—Å—Ç–æ–≤")
        else:
            print("‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–∂–µ –≤–∫–ª—é—á–µ–Ω—ã")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        style = await get_setting('autofeed_image_style', 'fantasy')
        print(f"  –°—Ç–∏–ª—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {style}")
        
        print("\nüéØ –ù–ê–°–¢–†–û–ô–ö–ò –ó–ê–í–ï–†–®–ï–ù–´!")
        print("–ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –¥–æ–ª–∂–µ–Ω –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö 1-2 –º–∏–Ω—É—Ç.")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –±–æ—Ç–∞ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞: {e}")
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞: {e}", exc_info=True)
        return False

async def show_current_status():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("\nüìä –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï:")
    
    auto_mode = await get_setting("auto_mode_status", "off")
    auto_enabled = await get_setting("auto_posting_enabled", "0")
    interval_min = await get_setting("post_interval_minutes", "240")
    with_image = await get_setting("autofeed_with_image", "off")
    
    print(f"‚Ä¢ –†–µ–∂–∏–º –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞: {auto_mode}")
    print(f"‚Ä¢ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω: {auto_enabled}")
    print(f"‚Ä¢ –ò–Ω—Ç–µ—Ä–≤–∞–ª: {interval_min} –º–∏–Ω—É—Ç")
    print(f"‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {with_image}")
    
    publishing_manager = PublishingManager()
    pub_settings = await publishing_manager.get_settings(user_id=int(ADMIN_ID))
    print(f"‚Ä¢ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Telegram: {'‚úÖ' if pub_settings.publish_to_tg else '‚ùå'}")
    print(f"‚Ä¢ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ VK: {'‚úÖ' if pub_settings.publish_to_vk else '‚ùå'}")

if __name__ == "__main__":
    async def main():
        success = await fix_autoposting()
        if success:
            await show_current_status()
        print("\n" + "=" * 50)
    
    asyncio.run(main()) 